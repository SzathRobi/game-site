import { useContext, useState, useEffect } from "react";
import Head from "next/head";
import styles from "../styles/Home.module.scss";
import Landing from "../comps/landing/Landing";
import Header from "../comps/header/Header";
//import Characters from "../comps/characters/Characters";
//import Timeline from "../comps/timeline/Timeline";
//import CharactersSlider from "../comps/charactersSlider/CharactersSlider";
import Team from "../comps/team/Team";
import Partners from "../comps/partners/Partners";
import Story from "../comps/story/Story";
import Tokemonics from "../comps/tokemonics/Tokemonics";
import Roadmap from "../comps/roadmap/Roadmap";
import Whitepaper from "../comps/whitepaper/Whitepaper";
import ScrollContext from "../contexts/ScrollContext";

function Home({ buildTimestamp }) {
  const { isScrolling, setIsScrolling } = useContext(ScrollContext);
  //console.log({ buildTimestamp });
  const [offsetY, setOffsetY] = useState(0);
  const handleScroll = () => setOffsetY(window.pageYOffset);

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);

    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const [isPageBottom, setIsPageBottom] = useState(false);

  const [counter, setCounter] = useState(0);

  let timeout = null;

  useEffect(() => {
    window.addEventListener("scroll", () => {
      //if (!isScrolling) {
      setIsScrolling(true);
      () => clearTimeout(timeout);
      //}
      //clearTimeout(myTimeout);
    });
  }, []);

  useEffect(() => {
    timeout = setTimeout(() => {
      setIsScrolling(false);
    }, 5000);

    return () => clearTimeout(timeout);
  }, [isScrolling]);

  useEffect(() => {
    let interval = null;
    interval = setInterval(() => {
      setCounter((counter) => counter + 1);
    }, 1000);

    return () => clearInterval(interval);
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Distopy</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.main}>
        <Landing offsetY={offsetY} isScrolling={isScrolling} />
        <Story offsetY={offsetY} />
        {/* <Tokemonics />
        <Partners />*/}
        <Roadmap />
        <Whitepaper />
        {/*<CharactersSlider />

        <Timeline offsetY={offsetY} />
  */}
      </div>
    </div>
  );
}

export const getStaticProps = () => {
  return {
    props: {
      buildTimestamp: Date.now(),
    },
  };
};

export default Home;
